from django.test import TestCase

from .models import *
from hospital.models import Hospital
from django.utils import timezone
import datetime

from emr.models import *
from django.contrib.auth.models import Permission, User
from django.utils import timezone
import datetime
from django.core.urlresolvers import reverse
from django.contrib.auth import logout, authenticate, login

def setup_environment():
    
    Hospital.objects.all().delete()
    h = Hospital.objects.create(name="The Hospital")
    h.save()

    emr = EMR.objects.create()
    emr.save()

    User.objects.all().delete()

    Doctor.objects.all().delete()

    ud = User.objects.create_user(
                username="drstrange",  # cleaned_data is autogenerated data. can be modified in form
                password="pass",
                email="",
                first_name="Doctor",
                last_name="Strange"
            )
    ud.save()
    d = Doctor.objects.create(user=ud)
    d.hospitals.add(h)
    d.save()


    Patient.objects.all().delete()

    up = User.objects.create_user(
                username="patientzero",  # cleaned_data is autogenerated data. can be modified in form
                password="pass",
                email="",
                first_name="Patient",
                last_name="Zero")
    up.save()

    p = Patient.objects.create(user=up, doctor = d, hospital=h, emr=emr)
    p.save()


    un = User.objects.create_user(
                username="nursenormal",  # cleaned_data is autogenerated data. can be modified in form
                password="pass",
                email="",
                first_name="Nurse",
                last_name="Normal")
    un.save()
    n = Nurse.objects.create(user=un, hospital=h)
    n.save()

    return True
                             


class CalendarViewTest(TestCase):
    def test_setup_environment(self):
        """This test simply makes sure we can set up a database environment"""
        setup_environment()
        self.assertEqual(Doctor.objects.all().count(), 1)
        self.assertEqual(Nurse.objects.all().count(), 1)
        self.assertEqual(Patient.objects.all().count(), 1)
        self.assertEqual(User.objects.all().count(), 3)

    def test_event_in_calendar_view(self):
        setup_environment()
        p = Patient.objects.all()[0]
        d = Doctor.objects.all()[0]
        h = p.hospital

        login(username=p.user.username, password=p.user.password)
        
        st = timezone.now()
        et = timezone.now() + datetime.timedelta(hours=1)
        
        evt = Event.objects.create(patient = p, doctor = d, startTime = st, endTime = et,
                                   hospital = h, description = "Test", appointment = True)
        evt.save()

        response = self.client.get(reverse('User:dashboard'))

        self.assertEqual(response.status_code, 200)
        self.assertContains(response, "{0} {1}".format(evt.startTime.Month, evt.startTime.day))
        #self.assertEqual(response.context['
                            
