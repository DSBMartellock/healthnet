from django.shortcuts import render
from User.models import *
from django.contrib import messages
from .forms import *
from django.contrib.auth.decorators import login_required
from django.contrib.auth import logout, authenticate, login
from django.views.decorators.csrf import csrf_protect
from django.http import HttpResponseRedirect
from django.template import RequestContext
from django.shortcuts import render_to_response
from django.core.urlresolvers import reverse
from django.views.generic import View
from django.contrib.auth.models import User
from emr.models import EMR
from hospital.models import *


#todo see if needed

# from User.models import *
# from .forms import PatientForm

# Create your views here.

class Register(View):

    def post(self, request):
        form = RegistrationForm(request.POST)
        if form.is_valid():
            user = User.objects.create_user(
                username=form.cleaned_data['username'],  # cleaned_data is autogenerated data. can be modified in form
                password=form.cleaned_data['password1'],
            )

            e = EMR.objects.create()
            p = Patient.objects.create(user=user, emr = e, insuranceNum=form.cleaned_data['insuranceNum'], hospital=form.cleaned_data['hospital'])
            p.save()

            user = authenticate(username=form.cleaned_data['username'], password=form.cleaned_data['password1'])
            login(request, user)

            if hasattr(user, 'patient'):
                request.session['user_type'] = 'patient'
            elif hasattr(user, 'nurse'):
                request.session['user_type'] = 'nurse'
            elif hasattr(user, 'doctor'):
                request.session['user_type'] = 'doctor'

            return HttpResponseRedirect(reverse('User:eProfile'))
        return HttpResponseRedirect(reverse('login'))

    def get(self, request):
        form = RegistrationForm()
        variables = RequestContext(request, {'form': form})
        return render(request, 'registration/register.html', variables)

class LoginView(View):

    def post(self, request):
        lform = LoginForm(request.POST)

        if(lform.is_valid()):
            user = authenticate(username=lform.cleaned_data['username'], password=lform.cleaned_data['password'])
            if user is not None:
                login(request, user)

                return HttpResponseRedirect(reverse('User:dashboard'))

        return HttpResponseRedirect(reverse('login'))

    def get(self, request):
        if request.user.is_authenticated():
            return HttpResponseRedirect(reverse('User:dashboard'))

        form = LoginForm()

        return render(request, 'logIn/index.html', {'form': form})



def register_success(request):
    return render_to_response('registration/success.html')

def logout_page(request):
    logout(request)
    return HttpResponseRedirect(reverse('login'))


"""this method will process a user's request to log in
def logIn(request):
    username = request.POST['username']
    password = request.POST['password']
    user = authenticate(username = username, password = password)
    if user is not None:
        if user.is_active:
            login(request, user)

            return HttpResponseRedirect(reverse('User : dashboard', args=(request.user.id),))
        else:
            return messages.error(request, 'Your account has been disabled. Contact your administrator.')
    else:
        return messages.error(request, 'Invalid login.')"""

@login_required
def home(request):
    return render_to_response('home.html',{'user': request.user })

# def index(request):
#
#     return render(request, 'logIn/index.html')


# def authenticate(request):
#     response = 'neutral'
#     #queryset
#     patientquery = Patient.objects.filter(UserName=request.POST['UN'])
#
#     if patientquery.exists():
#         response = 'well the username exists'
#         passfromdb = patientquery.values('Password')[0]['Password']
#         if passfromdb == request.POST['PW']:
#             response = response +' hell yeah you in'
#         else:
#             response = response+ ' gettt outta here with that password tho'
#     else:
#         response = 'username does not exist'
#     return HttpResponse(response )


#todo see if you can add other params to a generic user paramater
# class Register(CreateView):
#     model = Patient
#     template_name = 'login/register_form.html'
#     form_class = PatientForm

