import csv
from user.models import *
from hospital.models import *
from emr.models import *
from django.contrib.auth.models import User
from django.core.management.base import BaseCommand

Hospital.objects.all().delete()
User.objects.all().delete()
Doctor.objects.all().delete()
Patient.objects.all().delete()
Nurse.objects.all().delete()
HospitalAdmin.objects.all().delete()

def makeDjangoUser(mlist):
    return User.objects.get_or_create(
             username="patientzero",  # cleaned_data is autogenerated data. can be modified in form
             password="pass",
             first_name="Patient",
             last_name="Zero")


def makeDoctor(mlist):
    return Doctor.objects.get_or_create(user=mlist[0],
                                           patientCap=mlist[1])

def makeNurse(mlist):
    return Nurse.objects.get_or_create(user=mlist[0],
                                          hospital=mlist[1])

def makePatient(mlist):
    return Patient.objects.get_or_create(user=mlist[0],
                                         doctor=mlist[1],
                                         hospital=mlist[2],
                                         insuranceNum=mlist[3],
                                         phone=mlist[4])


def getDoctorByUname(uname):
    user = User.objects.get(username=uname)
    if hasattr(user, 'doctor'):
        return user.doctor

def getHospitalByName(name):
    return Hospital.objects.get(name=name)

def makeHos(name):
    return Hospital.objects.get_or_create(name=name)

def printForTest():
    print("Hospitals: {0}".format(Hospital.objects.all()))
    print("Doctors: {0}".format(Doctor.objects.all()))
    print("Nurse: {0}".format(Nurse.objects.all()))
    print("Patients: {0}".format(Patient.objects.all()))

    for doc in Doctor.objects.all().exclude(nurses=None):
        print("Doctor {0} Trusts: ".format(doc.user.username))
        for nurse in doc.nurses.all():
            print("\t"+nurse.user.username)



class Command(BaseCommand):

    def handleDoctors(self, mpath):
        with open(mpath) as csvfile:
            """Username,password,first_name,last_name,max_capacity,[phone_number],hospital1,[hospital2, …]"""
            doctors = csv.reader(csvfile)
            labels = next(doctors)

            for row in doctors:
                u = makeDjangoUser(row[:4])[0]
                u.save()
                pcap = int(row[4])
                d = makeDoctor([u, pcap])[0]
                for hos in row[6:]:
                    d.hospitals.add(makeHos(hos)[0])

                d.save()


    def handleNurses(self, mpath):
        with open(mpath) as csvfile:
            """Username,password,first_name,last_name,hospital,[phone_number],doctor1,[doctor2…]"""
            nurses = csv.reader(csvfile)
            labels = next(nurses)

            for row in nurses:
                u = makeDjangoUser(row[:4])[0]
                u.save()

                h = makeHos(row[4])[0]

                n = makeNurse([u, h])[0]
                n.accepted = True
                n.save()

                for doc in row[6:]:
                    d = getDoctorByUname(doc)
                    if not(d is None):
                        d.nurses.add(n)
                        d.save()
                    else:
                        print("error adding nurse: {0} to doctor: {1} 's Trusted list, Doctor Doesnt Exist".format(n.user.usernname, doc))


    def handlePatients(self, mpath):
        with open(mpath) as csvfile:
            """patient_email,patient_password,first_name,last_name,insurance_number,birth_date,sex, Doctor,hospital,[phone, address,emergency_contact_first,emergency_contact_last, emergency_contact_phone]"""
            patients = csv.reader(csvfile)
            labels = next(patients)


            d = Doctor.objects.all()[0]
            h = d.hospitals.all()[0]

            up = makeDjangoUser(['patientzero', 'pass', 'Patient', 'Zero'])[0]

            # up = User.objects.create_user(
            #     username="patientzero",  # cleaned_data is autogenerated data. can be modified in form
            #     password="pass",
            #     first_name="Patient",
            #     last_name="Zero")
            # up.save()

            p = Patient.objects.create(user=up, doctor=d, hospital=h)
            p.save()

            # for row in patients:
            #     u = makeDjangoUser(row[:4])[0]
            #     u.save()
            #
            #     d = getDoctorByUname(row[7])
            #     d.accepted=True
            #     d.save()
            #
            #     h = getHospitalByName(row[8])
            #     p = makePatient([u, d, h, row[4], row[9]])[0]
            #     p.save()


    def handle(self, **options):
        self.handleDoctors('media/csv/doctor.csv')
        self.handleNurses('media/csv/nurse.csv')
        self.handlePatients('media/csv/patient.csv')


        printForTest()




